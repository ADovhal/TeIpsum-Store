name: Reusable Deploy Service

on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        required: true
        type: string
      DEPLOY_ENV:
        required: true
        type: string
      GIT_BRANCH:
        required: true
        type: string
      COMPOSE_FILE:
        required: true
        type: string
    secrets:
      PROJECT_DIR:
        required: true
      SSH_HOST:
        required: true
      SSH_USER:
        required: true
      SSH_KEY:
        required: true
      DEPLOY_PORT:
        required: true
      
      SERVICE_SERVER_PORT:
        required: true
      DB_NAME:
        required: true
      DB_URL:
        required: true
      DB_USER:
        required: true
      DB_PASSWORD:
        required: true

      SPRING_KAFKA_BOOTSTRAP_SERVERS:
        required: true

      JWT_SECRET:
        required: true
      JWT_REFRESH_SECRET:
        required: true
      CORS_ALLOWED_ORIGINS:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy ${{ inputs.SERVICE_NAME }} to ${{ inputs.DEPLOY_ENV }}
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            echo "üì¶ Deploying service: ${{ inputs.SERVICE_NAME }}"
            PROJECT_DIR="${{ secrets.PROJECT_DIR }}"
            SERVICE_NAME="${{ inputs.SERVICE_NAME }}"
            DEPLOY_ENV="${{ inputs.DEPLOY_ENV }}"
            COMPOSE_FILE="${{ inputs.COMPOSE_FILE }}"

            echo "üßπ Removing old project directory..."
            rm -rf $PROJECT_DIR
            git clone https://github.com/${{ github.repository }} $PROJECT_DIR
            cd $PROJECT_DIR

            git checkout ${{ inputs.GIT_BRANCH }}
            git pull

            echo "üìÅ Creating .env for $SERVICE_NAME"
            ENV_PATH="$PROJECT_DIR/backend/$SERVICE_NAME/.env"

            cat <<EOF > $ENV_PATH
            SERVICE_SERVER_PORT=${{ secrets.SERVICE_SERVER_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_URL=${{ secrets.DB_URL }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
            CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}
            SPRING_KAFKA_BOOTSTRAP_SERVERS=${{ secrets.SPRING_KAFKA_BOOTSTRAP_SERVERS }}
            EOF

            echo "üîÑ Restarting Docker container..."
            docker compose --env-file $ENV_PATH -f $PROJECT_DIR/backend/$SERVICE_NAME/$COMPOSE_FILE down
            docker compose --env-file $ENV_PATH -f $PROJECT_DIR/backend/$SERVICE_NAME/$COMPOSE_FILE up -d --build

            echo "‚úÖ Deployed $SERVICE_NAME successfully!"
