name: Deploy Nginx

on:
  push:
    paths:
      - 'infra/nginx/**'
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Nginx
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.PROD_DEPLOY_HOST || secrets.STAGE_DEPLOY_HOST }}
          username: ${{ github.ref == 'refs/heads/main' && secrets.PROD_DEPLOY_USER || secrets.STAGE_DEPLOY_USER }}
          key: ${{ github.ref == 'refs/heads/main' && secrets.PROD_DEPLOY_KEY || secrets.STAGE_DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            set -e

            echo "ðŸš€ Starting Nginx deploy..."

            PROJECT_DIR="${{ secrets.PROJECT_DIR }}"
            NGINX_DIR="$PROJECT_DIR/infra/nginx"
            GIT_BRANCH=${{ github.ref == 'refs/heads/main' && 'main' || 'develop' }}
            DEPLOY_ENV=${{ github.ref == 'refs/heads/main' && 'prod' || 'stage' }}

            echo "ðŸ“¦ Using sparse checkout to fetch only infra/nginx"
            TEMP_DIR=$(mktemp -d)
            git clone --depth 1 --branch "$GIT_BRANCH" --filter=blob:none --sparse https://github.com/${{ github.repository }} "$TEMP_DIR"
            cd "$TEMP_DIR"
            git sparse-checkout set infra/nginx

            echo "ðŸ§¹ Cleaning old nginx dir on server..."
            rm -rf "$NGINX_DIR"
            mkdir -p "$PROJECT_DIR/infra"

            echo "ðŸ“¥ Copying new nginx files..."
            cp -r "$TEMP_DIR/infra/nginx" "$PROJECT_DIR/infra/"

            echo "ðŸ§¼ Cleaning up temp..."
            rm -rf "$TEMP_DIR"

            echo "ðŸ›  Rebuilding nginx container..."
            cd "$NGINX_DIR"
            COMPOSE_FILE="docker-compose.${DEPLOY_ENV}-nginx.yml"

            docker compose -f "$COMPOSE_FILE" down --remove-orphans
            docker compose -f "$COMPOSE_FILE" up -d --force-recreate --build

            echo "âœ… Nginx deployed successfully!"
