\connect <<AUTH_SERVICE_DB_NAME>>
GRANT USAGE, CREATE ON SCHEMA public TO <<AUTH_SERVICE_DB_USER>>;
ALTER DEFAULT PRIVILEGES IN SCHEMA public
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO <<AUTH_SERVICE_DB_USER>>;

\connect <<USER_SERVICE_DB_NAME>>
GRANT USAGE, CREATE ON SCHEMA public TO <<USER_SERVICE_DB_USER>>;
ALTER DEFAULT PRIVILEGES IN SCHEMA public
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO <<USER_SERVICE_DB_USER>>;

\connect <<CATALOG_SERVICE_DB_NAME>>
GRANT USAGE, CREATE ON SCHEMA public TO <<CATALOG_SERVICE_DB_USER>>;
ALTER DEFAULT PRIVILEGES IN SCHEMA public
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO <<CATALOG_SERVICE_DB_USER>>;

\connect <<ADMIN_PRODUCT_SERVICE_DB_NAME>>
GRANT USAGE, CREATE ON SCHEMA public TO <<ADMIN_PRODUCT_SERVICE_DB_USER>>;
ALTER DEFAULT PRIVILEGES IN SCHEMA public
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO <<ADMIN_PRODUCT_SERVICE_DB_USER>>;

DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_namespace WHERE nspname = 'inventory') THEN
        EXECUTE 'CREATE SCHEMA inventory';
    END IF;
END
$$;

CREATE TABLE IF NOT EXISTS inventory.inventory (
    product_id UUID PRIMARY KEY,
    quantity INTEGER NOT NULL
);

GRANT USAGE ON SCHEMA inventory TO <<ADMIN_PRODUCT_SERVICE_DB_USER>>;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA inventory TO <<ADMIN_PRODUCT_SERVICE_DB_USER>>;

\connect <<ORDER_SERVICE_DB_NAME>>
GRANT USAGE, CREATE ON SCHEMA public TO <<ORDER_SERVICE_DB_USER>>;
ALTER DEFAULT PRIVILEGES IN SCHEMA public
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO <<ORDER_SERVICE_DB_USER>>;