server:
  port: ${SERVICE_SERVER_PORT}
  address: 0.0.0.0

spring:
  application:
    name: admin-product-service

  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false

logging:
  system:
    service.name: ${spring.application.name}
  level:
    com.teipsum.adminproductservice: debug
    org.springframework.security: info
    org.hibernate.SQL: warn
    ADMIN_AUDIT: info

jwt:
  secret: ${JWT_ADMIN_SECRET}
  expiration-ms: 86400000

cors:
  allowed:
    origins: ${CORS_ALLOWED_ORIGINS}

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics"